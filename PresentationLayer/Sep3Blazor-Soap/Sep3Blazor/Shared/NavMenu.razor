@using Sep3Blazor.Data.GroupData
@using Sep3Blazor.Model
@using Sep3Blazor.Authentication
@using Sep3Blazor.Data.Refresh
@inject IGroupService _groupService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IRefreshServiceNavMem _refreshServiceNavMem
@inject NavigationManager _navigationManager

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow mb-3 top-row">

    <div class="container">

        <div>
            <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
        <a class="navbar-brand text-light" asp-area="" asp-page="/Index">NoteLender</a>
        @if (!collapseNavMenu)
        {
            <AuthorizeView>
                <div class="form-group navbar-brand" asp-area="" asp-page="/Index">
                    <button class="btn btn-primary btn-block" href="" @onclick="PerformLogout">
                        Log out
                    </button>
                </div>
            </AuthorizeView>
        }
        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex flex-sm-row-reverse">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item px-3">
                    <AuthorizeView>
                        <NavLink class="nav-link" href="" @onclick="CollapseNavMenu" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Home
                        </NavLink>
                    </AuthorizeView>
                </li>
                <li class="nav-item px-3">
                    <AuthorizeView>
                        <NavLink class="nav-link" href="Account" @onclick="CollapseNavMenu" Match="NavLinkMatch.All">
                            <span class="oi oi-file" aria-hidden="true"></span> Account
                        </NavLink>
                    </AuthorizeView>
                </li>
                @if (GroupList != null)
                {
                    <li class="nav-item px-3">
                        <div class="dropdown">
                            <AuthorizeView>
                                <button class=" nav-link btn-special dropdown-toggle" data-toggle="dropdown" type="button" aria-haspopup="true" aria-expanded="false"
                                        @onclick="e => this._show = !this._show"
                                        @onfocusout="OutFocus">
                                    <span class="oi oi-spreadsheet" aria-hidden="true"></span> 
                                    My Groups
                                </button>
                            </AuthorizeView>
                            <div class="dropdown-menu pre-scrollable @(_show ? "show" : "")">
                                @foreach (var group in GroupList)
                                {
                                    <AuthorizeView>
                                        <NavLink class="dropdown-item" href="@("GroupPage/" + group.id+"/"+group.name)" @onclick="OutFocus" Match="NavLinkMatch.All">
                                            <span class="oi oi-people" aria-hidden="true"></span> @("Group " + group.name)
                                        </NavLink>
                                    </AuthorizeView>
                                }
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
        @if (collapseNavMenu)
        {
            <AuthorizeView>
                <div class="form-group navbar-brand" asp-area="" asp-page="/Index">
                    <button class="btn btn-primary btn-block" href="" @onclick="PerformLogout">
                        Log out
                    </button>
                </div>
            </AuthorizeView>
        }
    </div>
</nav>

@* <div class="top-row mx-auto navbar navbar-dark"> *@
@*     <a class="navbar-brand navbar-text " href=""> <text>&emsp;</text>NoteLender</a> *@
@*     <button class="navbar-toggler" @onclick="ToggleNavMenu"> *@
@*         <span class="navbar-toggler-icon"></span> *@
@*     </button> *@
@* </div> *@

@* <div class="@NavMenuCssClass" @onclick="ToggleNavMenu"> *@
@*     <ul class="nav flex-column"> *@
@*         <li class="nav-item px-3"> *@
@*             <AuthorizeView> *@
@*                 <NavLink class="nav-link" href="" Match="NavLinkMatch.All"> *@
@*                     <span class="oi oi-home" aria-hidden="true"></span> Home *@
@*                 </NavLink> *@
@*             </AuthorizeView> *@
@*         </li> *@
@*         <li class="nav-item px-3"> *@
@*             <AuthorizeView> *@
@*                 <NavLink class="nav-link" href="Account" Match="NavLinkMatch.All"> *@
@*                     <span class="oi oi-file" aria-hidden="true"></span> Account *@
@*                 </NavLink> *@
@*             </AuthorizeView> *@
@*         </li> *@
@* @if (GroupList != null) *@
@* { *@
@*     <li class="nav-item px-3"> *@
@*         <AuthorizeView> *@
@*             <NavLink class="nav-link" @onclick="() => expandSubNav = !expandSubNav"> *@
@*                 <span class="oi oi-list-rich" aria-hidden="true"></span> My Groups *@
@*             </NavLink> *@
@*         </AuthorizeView> *@
@*     </li> *@
@*     @if (expandSubNav) *@
@*     { *@
@*         @foreach (var group in GroupList) *@
@*         { *@
@*             <li class="nav-item px-3 "> *@
@*                 <AuthorizeView> *@
@*                     <NavLink class="nav-link navBorder"  href="@("GroupPage/" + group.id)" Match="NavLinkMatch.All"> *@
@*                         <span class="oi oi-people" aria-hidden="true"></span> @("Group " + group.name) *@
@*                     </NavLink> *@
@*                 </AuthorizeView> *@
@*             </li> *@
@*         } *@
@*     } *@
@* } *@
@*     </ul> *@
@* </div> *@

@code {

    private bool _show = false;
    
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    

    private async Task OutFocus()
    {
        collapseNavMenu = true;
        await Task.Delay(200);
        _show = false;
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    public IList<Group> GroupList { get; set; }
    private User _cachedUser;


    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        _refreshServiceNavMem.RefreshRequested += RefreshState;
        _cachedUser = ((CustomAuthenticationStateProvider) _authenticationStateProvider).CachedUser;
        GroupList = await _groupService.GetGroupList(_cachedUser.id);
    }

    public async void RefreshState()
    {
        GroupList = await _groupService.GetGroupList(_cachedUser.id);
        StateHasChanged();
    }

    public async Task PerformLogout()
    {
        try
        {
            ((CustomAuthenticationStateProvider) _authenticationStateProvider).LogOut();
            _navigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

}
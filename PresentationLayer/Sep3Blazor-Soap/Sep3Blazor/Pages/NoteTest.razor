@page "/NoteTest"
@using Sep3Blazor.Data
@using Sep3Blazor.Model
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Logging
@using System.Text.Json
@inject INoteService _noteService
@inject NavigationManager NavigationManager;

<h1>Note Testing</h1>
@if (SearchPhrase == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>@SearchPhrase</p>
}
    
    <EditForm Model="@Note" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h2>Add Note</h2>
        <p>
            <label>
                NoteId:
                <InputNumber @bind-Value="Note.id" />
            </label>
        </p>
        <p>
            <label>
                UserId:
                <InputNumber @bind-Value="Note.userId" />
            </label>
        </p>
        <p>
            <label>
                GroupId:
                <InputNumber @bind-Value="Note.groupId" />
            </label>
        </p>
        <p>
            <label>
                Week:
                <InputNumber @bind-Value="Note.week" />
            </label>
        </p>
        <p>
            <label>
                Year:
                <InputNumber @bind-Value="Note.year" />
            </label>
        </p>
        <p>
            <label>
                Name:
                <InputText @bind-Value="Note.name"/>
            </label>
        </p>
        <p>
            <label>
                Status:
                <InputSelect @bind-Value="Note.status">
                    <option value="">Not started</option>
                    <option value="Started">Started</option>
                    <option value="Finished">Finished</option>
                </InputSelect>
            </label>
        </p>
        <p>
            <label>
                Text
                <InputTextArea @bind-Value="Note.text" />
            </label>
        </p>
        <button type="submit">Submit</button>
    </EditForm>

@code
{
    public Note Note = new Note(0,0,0,0,0,"","","");
    public IList<Note> NoteList { get; set; }
    public string SearchPhrase;

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async void HandleValidSubmit()
    {
        Console.WriteLine("NoteID: " + Note.id);
        Console.WriteLine("UserID: " + Note.userId);
        Console.WriteLine("GroupID: " + Note.groupId);
        Console.WriteLine("Week: " + Note.week);
        Console.WriteLine("Year: " + Note.year);
        Console.WriteLine("Name: " + Note.name);
        Console.WriteLine("Status: " + Note.status);
        Console.WriteLine("Text: " + Note.text);

        Note noteToAdd = new Note(Note.id, Note.userId,
            Note.groupId, Note.week, Note.year,
            Note.name, Note.status,
            Note.text);
        
        //NoteList.Add(noteToAdd);
        //NoteList = await _noteService.GetNoteList(noteToAdd.groupId.ToString());
        //await AddNote(noteToAdd);
    }

    public async Task AddNote(Note Note)
    {
        //NoteList.Add(Note);
        //await _noteService.AddNote(Note);
    }
    
    
    
}
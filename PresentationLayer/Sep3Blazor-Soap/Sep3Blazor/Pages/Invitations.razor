@page "/Invitations"
@using System.Drawing
@using Sep3Blazor.Data
@using Sep3Blazor.Data.InvitationData
@using Sep3Blazor.Model
@inject IInvitationService _invitationService
<h3>Pending invitations</h3>
<button type="submit" @onclick="SubmitGetInvitation">GET</button>

    <div class="card mb-2">
        <div class="card-header">
            @Invitation.id

        </div>
    <div class="card-body">
        <p>@Invitation.invitorId Wants you to pe apart of group @Invitation.groupId </p>

        <button type="button" style="background-color: darkgreen ">Accept</button>
        <button type="button" style="background-color: red" @onclick="@(() => RemoveInvitation(Invitation.id))">Decline</button>
            
    </div>
       </div>


<h3>Invite user to group</h3>
  <EditForm Model="@Invitation" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <p>
                    <label>
                        Invitation Id:
                        <InputNumber @bind-Value="Invitation.id"/>
                    </label>
                </p>
                <p>
                    <label>
                        Invite to (group id):
                        <InputNumber @bind-Value="Invitation.groupId"/>
                    </label>
                </p>
                <p>
                    <label>
                        Invite (user id):
                        <InputNumber @bind-Value="Invitation.inviteeId"/>
                    </label>
                </p>
                <p>
                    <label>
                        Invitor (user id):
                        <InputNumber @bind-Value="Invitation.invitorId"/>
                    </label>
                </p>
                <button type="submit">ADD</button>
            </EditForm>

@code {
    [Parameter]
    public String Value { get; set; }
    public IList<Invitation> InvitationList { get; set; }
    public string SearchPhrase;
    public Invitation Invitation = new Invitation(0,0,0,0);

    private async Task RemoveInvitation(int id)
    {
        await _invitationService.DeleteInvitation(Invitation.id.ToString());
    }
    private async void HandleValidSubmit()
    {
        Invitation invitationToAdd = new Invitation(Invitation.id, Invitation.groupId, Invitation.inviteeId, Invitation.invitorId);
        Invitation temp = await _invitationService.AddInvitations(invitationToAdd);
    }
    private async Task SubmitGetInvitation()
    {
        try
        {
            InvitationList = await _invitationService.GetInvitations(Invitation.id.ToString());
            SearchPhrase = InvitationList[0].id.ToString();
        }
        catch (ArgumentOutOfRangeException indexOutOfRangeException)
        {
            SearchPhrase = "Out of range";

        }
    }
    

}

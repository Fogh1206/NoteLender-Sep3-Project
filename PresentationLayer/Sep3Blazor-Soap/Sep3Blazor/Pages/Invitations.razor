@page "/Invitations"
@using System.Drawing
@using Sep3Blazor.Data
@using Sep3Blazor.Data.InvitationData
@using Sep3Blazor.Model
@inject IInvitationService _invitationService
<h3>Pending invitations</h3>
<button type="submit" @onclick="SubmitGetInvitation">GET</button>

@if (InvitationList == null)
{
    Console.WriteLine("No invitations");
}
else
{
    foreach (Invitation invitation in InvitationList)
    {
        <div class="card mb-2">
            <div class="card-header">
                @invitation.id

            </div>
            <div class="card-body">
                <p>@invitation.invitorId Wants you to pe apart of group @invitation.groupId </p>

                <button type="button" style="background-color: darkgreen ">Accept</button>
                <button type="button" style="background-color: red" @onclick="@(() => RemoveInvitation(invitation.id))">Decline</button>

            </div>
        </div>
    }
}



@code {
    [Parameter]
    public String Value { get; set; }
    public IList<Invitation> InvitationList { get; set; }
    public IList<Group> GroupList { get; set; }
    public string SearchPhrase;
    private Invitation _invitation;

    
    private async Task RemoveInvitation(int id)
    {
        await _invitationService.DeleteInvitation(_invitation.id.ToString());
    }
    /*
    private async void HandleValidSubmit()
    {
        Invitation invitationToAdd = new Invitation(Invitation.id, Invitation.groupId, Invitation.inviteeId, Invitation.invitorId);
        Invitation temp = await _invitationService.AddInvitations(invitationToAdd);
    }
    */
    private async Task SubmitGetInvitation()
    {
        try
        {
            InvitationList = await _invitationService.GetInvitations(Value.ToString());
            foreach (var invitation in InvitationList)
            {
                Console.WriteLine(invitation.id);
            }
            SearchPhrase = InvitationList[0].id.ToString();
        }
        catch (ArgumentOutOfRangeException indexOutOfRangeException)
        {
            SearchPhrase = "Out of range";
        }
    }
    

}

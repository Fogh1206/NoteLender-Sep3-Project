@page "/GroupPage"
@page "/GroupPage/{Id:int}" 

@using Sep3Blazor.Model
@using Sep3Blazor.Component
@using Sep3Blazor.Data.GroupMembersData
@using Sep3Blazor.Data.NoteData
@inject INoteService _noteService
@inject IGroupMembersService _groupMembersService
@inject IRefreshServiceNavMem _refreshServiceNavMem
@inject NavigationManager _navigationManager;
@inject IGroupService _groupService
@using Microsoft.AspNetCore.Components.Web.Extensions.Head
@using Sep3Blazor.Data.GroupData
@using Sep3Blazor.Data.Refresh

<Title Value="@("Group " + Id)"></Title>
<h3>GroupPage @Id</h3>
<TabControl>
    <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="@("#exampleDelete" + Id)">
        Delete group
    </button>
    <div class="modal fade" id="@("exampleDelete" + Id)" tabindex="-1" role="dialog" aria-labelledby="@("exampleModalCenterTitle" + Id)" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content" style="background-color: white">
                <div class="modal-header">
                    <h5 class="modal-title" id="@("exampleModalLongTitle" + Id)">Are you sure you want to delete this group?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cancel"></button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@(RemoveGroup)">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <TabPage Text="Notes">
        <NoteListComponent GroupId="@Id"></NoteListComponent>
    </TabPage>
    <TabPage Text="Members">
        <div class="row d-flex justify-content-between">
            <div class="col-sm-6">
                <MemberListComponent GroupId="@Id"></MemberListComponent>
            </div>
            <div class="col-sm-6">
                <InviteComponent GroupId="@Id"></InviteComponent>
            </div>
        </div>
    </TabPage>
</TabControl>

@code {

    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    public IList<Note> Notes { get; set; }
    public IList<GroupMembers> GroupMembersList { get; set; }


    protected override async Task OnInitializedAsync()
    {
        {
            Notes = await _noteService.GetNoteList(Id.ToString());
            GroupMembersList = await _groupMembersService.GetGroupMemberList(Id);
            Console.WriteLine(Notes.Count);
            Console.WriteLine(GroupMembersList.Count);
        }
    }

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }

    private async void RemoveGroup()
    {
        await _groupService.DeleteGroup(Id.ToString());
        _navigationManager.NavigateTo("/");
        _refreshServiceNavMem.CallRequestRefresh();
    }

}
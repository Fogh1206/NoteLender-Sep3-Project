@page "/Notes"
@page "/Notes/{Id:int}" 
@using Sep3Blazor.Model
@using System.Globalization
@using Sep3Blazor.Data.NoteData
@namespace NotesComponent
@inject INoteService _noteService

<div class="container">
  <div class="col-12">Showing week @(CurrentWeek-1) - @(CurrentWeek+1)</div>
  <div class="row">
    <div class="col-1">
      <button type="button" class="btn btn-secondary" style="height: 100%;" @onclick="previousPage">&lt;</button>
    </div>
    <div class="col-10">
      <div class="row justify-content-between">
        <div class="col-sm-4">
          @if (NoteList == null)
          {
            Console.WriteLine("NoteList is empty/non-existing");
          }
          else
          {
            @foreach (Note note in NoteList)
            {
              if (note.week == (CurrentWeek - 1))
              {
                <ul class="list-group">
                  <li class="list-group-item active">Week @(CurrentWeek - 1)</li>
                  <li class="list-group-item">Name:</li>
                  <input class="form-control" type="text" placeholder="@note.name" readonly>
                  <li class="list-group-item">Year</li>
                  <input class="form-control" type="text" placeholder="@note.year" readonly>
                  <li class="list-group-item">Status</li>
                  <input class="form-control" type="text" placeholder="@note.status" readonly>
                  <li class="list-group-item">Text</li>
                  <textarea class="p-3 mb-2 bg-warning text-dark" disabled cols="32" rows="3">
                  @note.text                               
                  </textarea>
                </ul>
              }
            }
          }
        </div>
        <div class="col-sm-4">
          @if (NoteList == null)
          {
            Console.WriteLine("NoteList is empty/non-existing");
          }
          else
          {
            @foreach (Note note in NoteList)
            {
              if (note.week == CurrentWeek)
              {
                <ul class="list-group">
                  <li class="list-group-item active">Week @CurrentWeek</li>
                  <li class="list-group-item">Name:</li>
                  <input class="form-control" type="text" placeholder="@note.name" readonly>
                  <li class="list-group-item">Year</li>
                  <input class="form-control" type="text" placeholder="@note.year" readonly>
                  <li class="list-group-item">Status</li>
                  <input class="form-control" type="text" placeholder="@note.status" readonly>
                  <li class="list-group-item">Text</li>
                  <textarea class="p-3 mb-2 bg-warning text-dark" disabled cols="32" rows="3">
                  @note.text                               
                  </textarea>
                </ul>
              }
            }
          }
        </div>
        <div class="col-sm-4">
          @if (NoteList == null)
          {
            Console.WriteLine("NoteList is empty/non-existing");
          }
          else
          {
            @foreach (Note note in NoteList)
            {
              if (note.week == (CurrentWeek + 1))
              {
                <ul class="list-group">
                  <li class="list-group-item active">Week @(CurrentWeek + 1)</li>
                  <li class="list-group-item">Name:</li>
                  <input class="form-control" type="text" placeholder="@note.name" readonly>
                  <li class="list-group-item">Year</li>
                  <input class="form-control" type="text" placeholder="@note.year" readonly>
                  <li class="list-group-item">Status</li>
                  <input class="form-control" type="text" placeholder="@note.status" readonly>
                  <li class="list-group-item">Text</li>
                  <textarea class="p-3 mb-2 bg-warning text-dark" disabled cols="32" rows="3">
                  @note.text                               
                  </textarea>
                </ul>
              }
            }
          }
        </div>
      </div>
    </div>
    <div class="col-1">
      <button type="button" class="btn btn-primary" style="height: 100%;" @onclick="nextPage">&gt;</button>
    </div>
  </div>
</div>

@code{

  [Parameter]
  public int Id { get; set; }
  [Parameter]
  public int Value { get; set; }
  public IList<Note> NoteList { get; set; }
  public int CurrentWeek;

  public void nextPage()
  {
    CurrentWeek++;
  }

  public void previousPage()
  {
    CurrentWeek--;
  }
  
  public static int GetIso8601WeekOfYear(DateTime time)
  {
    DayOfWeek day = CultureInfo.InvariantCulture.Calendar.GetDayOfWeek(time);
    if (day >= DayOfWeek.Monday && day <= DayOfWeek.Wednesday)
    {
      time = time.AddDays(3);
    }
    return CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(time, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);
  }
  
  protected override async Task OnInitializedAsync()
  {
    // Get the selected group's notes
    NoteList = await _noteService.GetNoteList(Value.ToString());
    
    // Get todays week
    CurrentWeek = GetIso8601WeekOfYear(DateTime.Today);
  }
  

}
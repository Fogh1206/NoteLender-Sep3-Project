@page "/Notes"
@page "/Notes/{Id:int}" 
@using Sep3Blazor.Model
@using System.Globalization
@using Sep3Blazor.Data.NoteData
@namespace NotesComponent
@inject INoteService _noteService

<div class="container-fluid">
  <br>
  <div class="row">
    <div class="col-1">
      <button type="button" class="btn btn-secondary" style="height: 480px; width: 36px;" @onclick="PreviousPage">&lt;</button>
    </div>
    <div class="col-10">
      <div class="row justify-content-between">
        <div class="col-sm-4">
          <div class="p-3 mb-2 bg-secondary text-white">
            Week @(_currentWeek - 1)
          </div>
          <table class="table table-sm table-hover table-wrapper-scroll-y my-custom-scrollbar">
            @if (NoteList == null)
            {
              <p>
                <em>Loading...</em>
              </p>
            }
            else
            {
              @foreach (Note note in NoteList)
              {
                if (note.week == (_currentWeek - 1))
                {
                  <tbody>
                  <tr>
                    <th scope="row">Name</th>
                    <td>@note.name</td>
                  </tr>
                  <tr>
                    <th scope="row">Year</th>
                    <td>@note.year</td>
                  </tr>
                  <tr>
                    <th scope="row">Status</th>
                    <td>@note.status</td>
                  </tr>
                  <tr>
                    <th scope="row">Text</th>
                    <td class="table-warning">@note.text</td>
                  </tr>
                  </tbody>
                  <br>
                }
              }
            }
          </table>
        </div>
        <div class="col-sm-4">
          <div class="p-3 mb-2 bg-secondary text-white">
            Week @_currentWeek
          </div>
          <table class="table table-sm table-hover table-wrapper-scroll-y my-custom-scrollbar">
            @if (NoteList == null)
            {
              Console.WriteLine("NoteList is empty/non-existing");
            }
            else
            {
              @foreach (Note note in NoteList)
              {
                if (note.week == _currentWeek)
                {


                  <tbody>
                  <tr>
                    <th scope="row">Name</th>
                    <td>@note.name</td>
                  </tr>
                  <tr>
                    <th scope="row">Year</th>
                    <td>@note.year</td>
                  </tr>
                  <tr>
                    <th scope="row">Status</th>
                    <td>@note.status</td>
                  </tr>
                  <tr>
                    <th scope="row">Text</th>
                    <td class="table-warning">@note.text</td>
                  </tr>
                  </tbody>
                  <br>
                }
              }
            }
          </table>
        </div>
        <div class="col-sm-4">
          <div class="p-3 mb-2 bg-secondary text-white">
            Week @(_currentWeek + 1)
          </div>
          <table class="table table-sm table-hover table-wrapper-scroll-y my-custom-scrollbar">
            @if (NoteList == null)
            {
              Console.WriteLine("NoteList is empty/non-existing");
            }
            else
            {
              @foreach (Note note in NoteList)
              {
                if (note.week == (_currentWeek + 1))
                {
                  <tbody>
                  <tr>
                    <th scope="row">Name</th>
                    <td>@note.name</td>
                  </tr>
                  <tr>
                    <th scope="row">Year</th>
                    <td>@note.year</td>
                  </tr>
                  <tr>
                    <th scope="row">Status</th>
                    <td>@note.status</td>
                  </tr>
                  <tr>
                    <th scope="row">Text</th>
                    <td class="table-warning">@note.text</td>
                  </tr>
                  </tbody>
                  <br>
                }
              }
            }
          </table>
        </div>
      </div>
    </div>
    <div class="col-1">
      <button type="button" class="btn btn-primary" style="height: 480px; width: 36px;" @onclick="NextPage">&gt;</button>
    </div>
  </div>
</div>

@code{

  [Parameter]
  public int Id { get; set; }
  [Parameter]
  public int Value { get; set; }

  private IList<Note> NoteList { get; set; }
  private int _currentWeek;

  // Show the notes further ahead in time and prevent going past week 52.
  private void NextPage()
  {
    switch (_currentWeek)
    {
      case 50:
        _currentWeek++;
        break;
      case 49:
        _currentWeek += 2;
        break;
      case <= 48:
        _currentWeek += 3;
        break;
    }
  }

  // Show the notes further behind in time and prevent going before week 1.
  private void PreviousPage()
  {
    switch (_currentWeek)
    {
      case 3:
        _currentWeek--;
        break;
      case 4:
        _currentWeek -= 2;
        break;
      case >= 5:
        _currentWeek -= 3;
        break;
    }
  }
  
  // Using Calender Library method to get the week of today´.
  private static int GetIsoWeekOfYear(DateTime time)
  {
    DayOfWeek day = CultureInfo.InvariantCulture.Calendar.GetDayOfWeek(time);
    if (day is >= DayOfWeek.Monday and <= DayOfWeek.Wednesday)
    {
      time = time.AddDays(3);
    }
    return CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(time, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);
  }
  
  // Method to run, when user enters this page.
  protected override async Task OnInitializedAsync()
  {
    // Get the selected group's notes
    NoteList = await _noteService.GetNoteList(Value.ToString());
    
    // Get today's week
    _currentWeek = GetIsoWeekOfYear(DateTime.Today);
  }
  

}